@model Language

<div class="header">
    <h1 class="title">@ViewBag.ChapterName</h1>
</div>

<div class="position-relative text-center">
    <!-- Top Image -->
    <img src="~/Assets/image.png" class="img-fluid" style="max-height: 300px; width: auto;" alt="Top Image">

    <!-- Favorite Button -->
    <button class="btn btn-link favorite-btn position-absolute" id="favoriteBtn" style="top: 10px; right: 10px;">
        <i class="fas fa-heart"></i>
    </button>

    <!-- Bhagavad Gita Shloka Overlay -->
    <div class="position-absolute top-50 start-50 translate-middle text-center p-3"
         style="color: #FF8C00; font-size: 20px; font-weight: bold; line-height: 1.6; border-radius: 10px;">
        <p class="mb-0">
            यदा यदा हि धर्मस्य ग्लानिर्भवति भारत। <br>
            अभ्युत्थानमधर्मस्य तदात्मानं सृजाम्यहम्॥ <br>
            परित्राणाय साधूनां विनाशाय च दुष्कृताम् <br>
            धर्मसंस्थापनार्थाय सम्भवामि युगे युगे॥
        </p>
    </div>
</div>

<div class="container">
    <div class="shloka-card">
        <div class="shloka-content">
            <!-- <div class="d-flex justify-content-end mb-2">
                <button class="btn btn-link favorite-btn" id="favoriteBtn">
                    <i class="fas fa-heart"></i>
                </button>
            </div> -->
            <div class="sanskrit-text">
                @Model.Sanskrit
            </div>

            <div class="translation hindi-text">
                @Model.Hindi
            </div>

            <div class="translation gujarati-text">
                @Model.Gujrati
            </div>
        </div>

        <div class="shloka-number">
            @(ViewBag.CurrentIndex + 1) / @ViewBag.TotalShlokas
        </div>

        <div class="navigation-controls">
            <a href="@Url.Action("ShowShloka", new { id = ViewBag.PreviousId })" onclick="stopAudio()" class="nav-button @(ViewBag.PreviousId == -1 ? "disabled" : "")" @(ViewBag.PreviousId == -1 ? "disabled" : "")>
                Pre
            </a>
            <button id="micButton" class="audio-button">
                <i class="fas fa-volume-up"></i>
            </button>
            <a href="@Url.Action("ShowShloka", new { id = ViewBag.NextId })" onclick="stopAudio()" class="nav-button @(ViewBag.NextId == -1 ? "disabled" : "")" @(ViewBag.NextId == -1 ? "disabled" : "")>
                Next
            </a>
        </div>
    </div>
</div>

<script>
    let isSpeaking = false;
    let speechSynthesisUtterance = new SpeechSynthesisUtterance();
    
    function stopAudio() {
        if (isSpeaking) {
            speechSynthesis.cancel();
            isSpeaking = false;
            const micButton = document.getElementById("micButton");
            micButton.classList.remove('speaking');
        }
    }

    function setVoice() {
        let voices = speechSynthesis.getVoices();
        speechSynthesisUtterance.voice =
        voices.find(voice =>
            voice.lang === "hi-IN" &&
            (voice.name.includes("Hemant") || voice.name.toLowerCase().includes("male"))
        ) ||
        voices.find(voice => voice.lang === "hi-IN") || // fallback: any Hindi voice
        voices[0]; // final fallback: any available voice
    }

    setTimeout(setVoice, 500); // Ensure voices are loaded

    document.getElementById("micButton").addEventListener("click", function () {
        const text = document.querySelector(".hindi-text").innerText;

        if (!isSpeaking) {
            speechSynthesisUtterance.text = text;
            speechSynthesisUtterance.lang = "hi-IN"; 
            speechSynthesis.speak(speechSynthesisUtterance);
            isSpeaking = true;
            this.innerHTML = '<i class="fas fa-volume-up"></i>';
            this.classList.add('speaking');
        } else {
            speechSynthesis.cancel();
            isSpeaking = false;
            this.innerHTML = '<i class="fas fa-volume-up"></i>';
            this.classList.remove('speaking');
        }
    });

    // Favorite functionality
    document.addEventListener('DOMContentLoaded', function() {
        const favoriteBtn = document.getElementById('favoriteBtn');
        const shlokaId = @Model.Id;
        const chapterName = '@ViewBag.ChapterName';
        const shlokaNumber = @(ViewBag.CurrentIndex + 1);
        const shlokaText = document.querySelector('.sanskrit-text').innerText;

        // Check if this shloka is already favorited
        const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
        const isFavorite = favorites.some(f => f.shlokaId === shlokaId);
        updateFavoriteButton(isFavorite);

        favoriteBtn.addEventListener('click', function() {
            let favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
            const index = favorites.findIndex(f => f.shlokaId === shlokaId);

            if (index === -1) {
                // Add to favorites
                favorites.push({
                    shlokaId,
                    chapterName,
                    shlokaNumber,
                    totalShlokas: @ViewBag.TotalShlokas,
                    shlokaText,
                    createdAt: new Date().toISOString()
                });
                updateFavoriteButton(true);
            } else {
                // Remove from favorites
                favorites.splice(index, 1);
                updateFavoriteButton(false);
            }

            localStorage.setItem('favorites', JSON.stringify(favorites));
        });
    });

    function updateFavoriteButton(isFavorite) {
        const favoriteBtn = document.getElementById('favoriteBtn');
        const icon = favoriteBtn.querySelector('i');
        if (isFavorite) {
            icon.classList.add('text-danger');
        } else {
            icon.classList.remove('text-danger');
        }
    }
</script>

<style>
    .header {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        background-color: white;
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .title {
        color: #FF8C00;
        font-size: 1.5rem;
        margin: 0;
    }

    .container {
        padding: 0;
        max-width: 100%;
    }

    .shloka-card {
        background: white;
        width: 100%;
        display: flex;
        flex-direction: column;
    }

    .image-container {
        width: 100%;
        height: 250px;
        overflow: hidden;
        position: relative;
    }

    .shloka-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .shloka-content {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .sanskrit-text {
        font-size: 1.2rem;
        color: #FF8C00;
        text-align: center;
        font-family: 'Noto Sans Devanagari', sans-serif;
        font-weight: bold;
    }

    .translation {
        text-align: center;
        color: #666;
        line-height: 1.6;
    }

    .hindi-text {
        font-family: 'Noto Sans Devanagari', sans-serif;
        color: #000000;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .gujarati-text {
        font-family: 'Noto Sans Gujarati', sans-serif;
        color: #333;
    }

    .shloka-number {
        text-align: center;
        color: #FF8C00;
        padding: 1rem;
        font-weight: bold;
    }

    .navigation-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        background-color: #fff;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
    }

    .nav-button {
        background-color: #FF8C00;
        color: white;
        border: none;
        padding: 0.8rem 2rem;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
    }

    .nav-button:hover {
        background-color: #ff9819;
        color: white;
        text-decoration: none;
    }

    .nav-button.disabled {
        opacity: 0.5;
        pointer-events: none;
    }

   .audio-button {
        background-color: #f0f0f0;
        border: none;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;    
        cursor: pointer;
        transition: background-color 0.2s ease;
        margin: 0 1rem;
    }

    .audio-button i {
        color: #666;
        font-size: 1.5rem;
    }

    .audio-button:hover {
        background-color: #e0e0e0;
    }

    .audio-button.speaking {
        background-color: #FF8C00;
    }

    .audio-button.speaking i {
        color: white;
    }

    .favorite-btn {
        z-index: 10;
        background: none;
        border: none;
        padding: 0;
    }

    .favorite-btn i {
        font-size: 24px;
        color: #FF8C00;
        filter: drop-shadow(0px 0px 2px rgba(255, 255, 255, 0.8));
    }

    .favorite-btn i.text-danger {
        color: #FF8C00;
    }

    .favorite-btn:hover i {
        transform: scale(1.1);
        transition: transform 0.2s ease;
    }

    @@media (min-width: 768px) {
        .container {
            max-width: 768px;
            margin: 0 auto;
        }

        .shloka-card {
            margin-top: 2rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .navigation-controls {
            position: static;
            box-shadow: none;
            border-top: 1px solid #eee;
        }
    }
</style>
